services:

    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    # event: check auth
    MembersBundle\EventListener\AuthenticationListener:
        arguments:
            $firewallName: '%members.firewall_name%'
        tags:
            - { name: kernel.event_subscriber }

    # event: user flash message translations
    MembersBundle\EventListener\FlashListener:
        tags:
            - { name: kernel.event_subscriber }

    # event: user resetting: post add and update events of objects, assets, documents.
    MembersBundle\EventListener\ResettingListener:
            arguments:
                $tokenTtl: '%members.resetting.token_ttl%'
            tags:
                - { name: kernel.event_subscriber }

    # event: update user after a successful login
    MembersBundle\EventListener\LastLoginListener:
        tags:
            - { name: kernel.event_subscriber }

    # listen to routes and redirect them if necessary
    MembersBundle\EventListener\ForbiddenRouteListener:
        tags:
            - { name: kernel.event_subscriber }

     # event: adds groups meta tags to HeadMeta view helper
    MembersBundle\EventListener\Frontend\HeadMetaListener:
        tags:
            - { name: kernel.event_subscriber }

    # event: handle post confirmation type
    MembersBundle\EventListener\PostConfirmationListener:
        arguments:
            $postEventType: '%members.registration.event.type%'
            $postEventOauthType: '%members.registration.event.oauth_type%'
        tags:
            - { name: kernel.event_subscriber }

    # event: post add and update events of objects, assets, documents.
    MembersBundle\EventListener\RestrictionStoreListener:
        tags:
            - { name: kernel.event_subscriber }

    # event: check asset public frontend path
    MembersBundle\EventListener\AssetFrontendPathListener:
        tags:
            - { name: kernel.event_subscriber }

    # event: post add and update events of objects
    MembersBundle\EventListener\MembersCompletenessListener:
        tags:
            - { name: kernel.event_subscriber }

    # event: listen to changes on user updates. send mails if available.
    MembersBundle\EventListener\UserChangeListener:
        arguments:
            $postEventType: '%members.registration.event.type%'
        tags:
            - { name: kernel.event_subscriber }

    MembersBundle\EventListener\TreeListener:
        tags:
            - { name: kernel.event_subscriber }